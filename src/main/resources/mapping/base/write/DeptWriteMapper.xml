<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mapping.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.prostate.base.mapper.write.BranchWriteMapper">


	 
	<insert id="save" parameterType="com.prostate.base.domain.BranchDO">
		<selectKey keyProperty="id" resultType="string" order="BEFORE">
			select replace(uuid(), '-', '') as id from dual
		</selectKey>
		insert into base_branch
		(
			`id`, 
			`parent_branch_id`, 
			`branch_name`, 
			`branch_number`, 
			`branch_grade`, 
			`branch_inform`, 
			`branch_weight`, 
			`order_weight`, 
			`create_user`, 
			`create_time`, 
			`update_user`, 
			`update_time`, 
			`delete_user`, 
			`delete_time`, 
			`del_flag`
		)
		values
		(
			#{id}, 
			#{parentBranchId}, 
			#{branchName}, 
			#{branchNumber}, 
			#{branchGrade}, 
			#{branchInform}, 
			#{branchWeight}, 
			#{orderWeight}, 
			#{createUser}, 
			#{createTime}, 
			#{updateUser}, 
			#{updateTime}, 
			#{deleteUser}, 
			#{deleteTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.prostate.base.domain.BranchDO">
		update base_branch 
		<set>
			<if test="parentBranchId != null">`parent_branch_id` = #{parentBranchId}, </if>
			<if test="branchName != null">`branch_name` = #{branchName}, </if>
			<if test="branchNumber != null">`branch_number` = #{branchNumber}, </if>
			<if test="branchGrade != null">`branch_grade` = #{branchGrade}, </if>
			<if test="branchInform != null">`branch_inform` = #{branchInform}, </if>
			<if test="branchWeight != null">`branch_weight` = #{branchWeight}, </if>
			<if test="orderWeight != null">`order_weight` = #{orderWeight}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="deleteUser != null">`delete_user` = #{deleteUser}, </if>
			<if test="deleteTime != null">`delete_time` = #{deleteTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from base_branch where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from base_branch where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getTree" resultType="com.prostate.base.domain.BranchDO">
		select `id`,`parent_branch_id`,`branch_name`,branch_number,`branch_grade`,`branch_inform`,`branch_weight`,`order_weight`,`create_user`,`create_time`,`update_user`,`update_time`,`delete_user`,`delete_time`,`del_flag` from base_branch
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="parentBranchId != null and parentBranchId != ''"> and parent_branch_id = #{parentBranchId} </if>
			<if test="branchName != null and branchName != ''"> and branch_name = #{branchName} </if>
			<if test="branchNumber != null and branchNumber != ''"> and branch_number = #{branchNumber} </if>
			and (branch_grade = '1' or branch_grade = '0')
			<if test="branchInform != null and branchInform != ''"> and branch_inform = #{branchInform} </if>
			<if test="branchWeight != null and branchWeight != ''"> and branch_weight = #{branchWeight} </if>
			<if test="orderWeight != null and orderWeight != ''"> and order_weight = #{orderWeight} </if>
			<if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
			<if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
			<if test="updateUser != null and updateUser != ''"> and update_user = #{updateUser} </if>
			<if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
			<if test="deleteUser != null and deleteUser != ''"> and delete_user = #{deleteUser} </if>
			<if test="deleteTime != null and deleteTime != ''"> and delete_time = #{deleteTime} </if>
			and del_flag ='0'
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by order_weight
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
</mapper>