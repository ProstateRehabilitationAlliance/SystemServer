<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mapping.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.prostate.user.mapper.read.VersionInformationReadMapper">


	<sql id="Base_Column_List">
		 id AS id,
			 version_number AS versionNumber,
			 version_details AS versionDetails,
			 create_user AS createUser,
			 create_time AS createTime
	</sql>
	
	
	<select id="get" resultType="com.prostate.user.entity.VersionInformationDO">
		select <include refid="Base_Column_List" /> from version_information where id = #{value}
	</select>

	<select id="getByVersionNumber" resultType="com.prostate.user.entity.VersionInformationDO">
		select <include refid="Base_Column_List" /> from version_information where versionNumber = #{value}
	</select>



	<select id="list" resultType="com.prostate.user.entity.VersionInformationDO">
		select <include refid="Base_Column_List" /> from version_information
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="versionNumber != null and versionNumber != ''"> and version_number = #{versionNumber} </if>
		  		  <if test="versionDetails != null and versionDetails != ''"> and version_details = #{versionDetails} </if>
		  		  <if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from version_information
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="versionNumber != null and versionNumber != ''"> and version_number = #{versionNumber} </if>
		  		  <if test="versionDetails != null and versionDetails != ''"> and version_details = #{versionDetails} </if>
		  		  <if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.prostate.user.entity.VersionInformationDO">
		insert into version_information
		(
			`id`, 
			`version_number`, 
			`version_details`, 
			`create_user`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{versionNumber}, 
			#{versionDetails}, 
			#{createUser}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.prostate.user.entity.VersionInformationDO">
		update version_information 
		<set>
			<if test="versionNumber != null">`version_number` = #{versionNumber}, </if>
			<if test="versionDetails != null">`version_details` = #{versionDetails}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from version_information where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from version_information where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>