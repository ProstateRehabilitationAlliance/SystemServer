<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mapping.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.prostate.base.mapper.read.DoctorTitleReadMapper">


	<sql id="Base_Column_List">
		 id AS id,
			 doctor_title_number AS doctorTitleNumber,
			 doctor_title_name AS doctorTitleName,
			 order_weight AS orderWeight,
			 create_user AS createUser,
			 create_time AS createTime,
			 update_user AS updateUser,
			 update_time AS updateTime,
			 delete_user AS deleteUser,
			 delete_time AS deleteTime,
			 del_flag  AS  delFlag
	</sql>


	<select id="get" resultType="com.prostate.base.domain.DoctorTitleDO">
		select <include refid="Base_Column_List" />from base_doctor_title where id = #{value} and del_flag = '0'
	</select>

	<select id="getByName" resultType="com.prostate.base.domain.DoctorTitleDO">
		select <include refid="Base_Column_List" />from base_doctor_title where doctor_title_name = #{value} and del_flag = '0'
	</select>

	<select id="getByNumber" resultType="com.prostate.base.domain.DoctorTitleDO">
		select <include refid="Base_Column_List" />from base_doctor_title where doctor_title_number = #{value} and del_flag = '0'
	</select>

	<select id="list" resultType="com.prostate.base.domain.DoctorTitleDO">
		select <include refid="Base_Column_List" /> from base_doctor_title
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="doctorTitleNumber != null and doctorTitleNumber != ''"> and doctor_title_number = #{doctorTitleNumber} </if>
			<if test="doctorTitleName != null and doctorTitleName != ''"> and doctor_title_name LIKE CONCAT(CONCAT('%', #{doctorTitleName}), '%')</if>

			<!--<if test="doctorTitleName != null and doctorTitleName != ''"> and doctor_title_name = #{doctorTitleName} </if>-->
		  		  <if test="orderWeight != null and orderWeight != ''"> and order_weight = #{orderWeight} </if>
		  		  <if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateUser != null and updateUser != ''"> and update_user = #{updateUser} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="deleteUser != null and deleteUser != ''"> and delete_user = #{deleteUser} </if>
		  		  <if test="deleteTime != null and deleteTime != ''"> and delete_time = #{deleteTime} </if>
					and del_flag = '0'
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by order_weight
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from base_doctor_title
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="doctorTitleNumber != null and doctorTitleNumber != ''"> and doctor_title_number = #{doctorTitleNumber} </if>
			 <if test="doctorTitleName != null and doctorTitleName != ''"> and doctor_title_name LIKE CONCAT(CONCAT('%', #{doctorTitleName}), '%')</if>
		  		  <if test="orderWeight != null and orderWeight != ''"> and order_weight = #{orderWeight} </if>
		  		  <if test="createUser != null and createUser != ''"> and create_user = #{createUser} </if>
		  		  <if test="createTime != null and createTime != ''"> and create_time = #{createTime} </if>
		  		  <if test="updateUser != null and updateUser != ''"> and update_user = #{updateUser} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="deleteUser != null and deleteUser != ''"> and delete_user = #{deleteUser} </if>
		  		  <if test="deleteTime != null and deleteTime != ''"> and delete_time = #{deleteTime} </if>
		  		   and del_flag = '0'
		  		</where>
	</select>
	 
	

</mapper>